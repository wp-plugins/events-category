=== Events Category ===
Contributors: westonruter
Tags: events, calendar, posts
Tested up to: 2.3.2
Stable tag: trunk
Donate link: http://weston.ruter.net/donate/

Seamless event calendar solution which extends the basic WordPress functionality to enable future-dated posts
to be listed within the blog chronology when they are assigned to a particular post category. The a future-dated post's timestamp
is used as the time stamp. Upcoming events widget included; iCal feed made available.

== Description ==

*NOTE: This documentation is very rough, and this plugin is alpha quality. Please donate to help me continue
improving this plugin if you see real potential or find great usefulness in it.*

Seamless event calendar solution which extends the basic WordPress functionality to enable future-dated posts
to be listed within the blog chronology when they are assigned to a particular post category. The a future-dated post's timestamp
is used as the time stamp. Upcoming events widget included; iCal feed made available.

= Quick Start =

1. Activate the plugin
1. Customize your single.php and category.php templates similarly to shown below
1. Create new posts in the "Events" category
1. Add the Upcoming Events widget to the sidebar
1. Before "The Loop" in your home template (either index.php or home.php), add <code>query_posts('cat=-' . get_option('eventscategory_ID'))</code> to prevent the future event posts from cluttering up your post feed.

= How it works =

WordPress is designed to serve posts arranged in a chronological order. Because of this
and because the post is such a fundamental building component of WordPress, it only makes
since that an Event Calendar solution for WordPress should take advantage of its core functionality.
At the most fundamental level, this plugin enables posts to be used as events by automatically publishing
any future-dated posts that reside inside of a specific category and its subcategories: this is the "Events Category".

Since events are merely future-dated posts, they may be browsed using WordPress's chronological archives.
Pretty permalinks to these event posts which contain the common year/month/day structure are intuatively
semantic: the URL to the event itself indicates the event's time. Since WordPress by default displays the future-most
posts first in a descending-chronological order, the behavior of the index pages under in the events category was changed.
A new query variable, <code>eventscategory-position</code>, is introduced which indicates the current position in the timeline.
When serving the root of a category, this query variable is set to "0", which means that the upcoming events will be shown in ascending order.
If there are more upcoming events than what is allowed to show per page, then there is a link generated with the usual
<code>previous_posts_link()</code> (yes, the name is unintuitive, but this is normal for WordPress). The second page of future events
would have <code>eventscategory-position</code> set to "1", and the third page "2", and so on.

If there are events that have already passed, they can be seen by clicking the link generated by <code>next_posts_link()</code>.
Unlike future events which are presented in ascending order, past events are presented in descending order. The first page of past
events has <code>eventscategory-position</code> set to "-1", the second page to "-2", and so on. Basically, all that
<code>eventscategory-position</code> does is it replaces the <code>paged</code> paramater, and conceptually it shifts the <code>paged</code> paramater.

As already mentioned, the landing page for the events category lists the next upcoming events, that is, the first page of future results.
When pretty permalinks are enabled, on the second page of future results, the URL would appear as <code>/category/events/future/2/</code>
(<code>/category/events/future/1/</code> and <code>/category/events/future/</code> and <code>/category/events/</code> all refer to the same
page of results where <code>eventscategory-position</code> is "0"). Likewise, on the first page of past events, the URL would appear as
<code>/category/events/past/</code> (<code>/category/events/past/1/</code> is equivalent where <code>eventscategory-position</code> is "-1");
the second page of past events would appear as <code>/category/events/past/2/</code> and so on.

Note that since all events are posts, you should run something like <code>query_posts('cat=-' . get_option('eventscategory_ID'))</code> on your
home template, otherwise all of your future posts will fill the first pages of your results. The main thing is that you don't display
posts from the events category on any template except the events category templates.

= Creating a new event =

Creating a new event is just creating a new post and assigning it to the "Events" category. You may rename this category to something else after
initially activiating the plugin. Once you select the "Events" category for the post, additional controls will appear asking for the necessary
information to create an event, including the start date-time and end-date time, and the location.

=Upcoming Events Widget=

Multiple upcoming events widgets may be added, and each one may be customized to show only certain categories of events,
to show a specified number of posts, to include the location, and to customize the date-time format and the address format.

=Template Tags and Tech=

The following template tags are introduced:

* <code>eventscategory_get_the_time($dt_format = '')</code> -- prints the time 
* <code>eventscategory_the_time($dt_format = '')</code> -- echos the preceding function
* <code>eventscategory_get_the_location($before = '', $after = '', $adr_format = '')</code> -- if no location is provided, nothing is returned
* <code>eventscategory_the_location($before = '', $after = '', $adr_format = '')</code> -- echos the preceding function

The <code>$dt_format</code> (date-time format) is a hybrid version of the format accepted by PHP's date() function:

	F jS, [Y @] g[:i][a]{[ - ][F ][j][S, ][Y,] g[:i]a} T

The <code>$adr_format</code> (address format) is a string incorporating adr microformat class names:

	[%street-address%]\n[%extended-address%]\n[%locality%][, %region%][ %postal-code%]\n[%country-name%]

=Sample category.php Template=
	<?php if (have_posts()) : ?>
	<h2>
		<?php
		$category = get_category(get_query_var('cat'));
		$catname = $category->name;
		    echo $catname;
		
		if(is_day()){
			echo ' on ';
			echo get_query_var('day') . ' ';
			echo $monthNames[get_query_var('monthnum')-1] . ', ';
			echo get_query_var('year');
		}
		elseif(is_month()){
			echo ' in ';
			echo $monthNames[get_query_var('monthnum')-1] . ' ';
			echo get_query_var('year');
		}
		elseif(is_year()){
			echo ' in ';
			echo get_query_var('year');
		}
		elseif(get_query_var('eventscategory-position') > 0){
			echo 'Further Upcoming ' . $catname;
		}
		elseif(get_query_var('eventscategory-position') < 0){
			echo 'Past ' . $catname;
		}
		else {
			echo 'Upcoming ' . $catname;
		}
		?>
	</h2>

	<!-- DISPLAY POSTS HERE -->
	
	<?php elseif(is_events_category()): ?>
		<?php if(get_query_var('eventscategory-position') >= 0): ?>
			<h2>No further future events</h2>
			<?php next_posts_link('&laquo; Older Events') ?>
			<?php //previous_posts_link('Newer Entries &raquo;') ?>
		<?php else: ?>
			<h2>No further past events</h2>
			<?php previous_posts_link('Future Entries &raquo;') ?>
			<?php //next_posts_link('&laquo; Older Entries') ?>
		<?php endif; ?>
	<?php else : ?>
	
		<h2 class="pagetitle">Not Found</h2>
		<?php include (TEMPLATEPATH . '/searchform.php'); ?>
	
	<?php endif; ?>


=Sample single.php Template=

	<?php
	$cats = get_the_category();
	$isEventsCat = is_events_category($cats[0]->cat_ID); 
	?>
	<div class="post post-<?php the_ID(); ?><?php
	if($isEventsCat)
		echo ' vevent';
	?>">
		<h2><a class="<?php if($isEventsCat) echo ' summary' ?>" href="<?php echo get_permalink() ?>" rel="bookmark" title="Permanent Link: <?php the_title_attribute(); ?>"><?php the_title(); ?></a></h2>
		<?php
		if($isEventsCat): ?>
			<p>
				<strong>When:</strong> <?php eventscategory_the_time() ?>
			</p>
			<?php eventscategory_the_location('<strong>Where:</strong>') ?>
		<?php endif; ?>
		<div class="entry">
			<div class=" <?php if($isEventsCat) echo ' description' ?>">
			<?php the_content('<p class="serif">Read the rest of this entry &raquo;</p>'); ?>
			</div>
		</div>
	</div>


= Changelog =
*2008-02-12: 0.1 (alpha)

* Initial version released

= Todo =
1. We can intercept the_content and the_excerpt and perhaps the_title filters, to prepend the event info.
1. Automatically add iCal feed to head?
1. Category post count incorrect when in admin managing posts
1. Seconds should be forbidden in the format, because if the minutes are hidden, the seconds will look like minutes? Or we can only remove the [i] if the [s] is 0
1. Note: hitting tab from title should go to the start date
1. Javascript validation of data needed
1. No future events are being listed in Manage Pages
1. Category count is broken in Manage Categories page as well as Posts Manage page
1. Daylight savings time is messing with using duration as the indicator for the end time.
1. We should handle the changing of the times of events by keeping track of the history of post_dates in multiple postmeta.event-dtprevious entries
1. Issue: when displaying the timezone, we need to adjust it according to the gmt_offset
1. Add 'category' field to microformat... <span class="category"><?php the_category() ?></span>
1. We need to improve the iCal feed format for location
1. Second date and time should maintain diff from first when the first is modified
1. Add support for keeping track of attendees; RSVP status may be assigned by registered users via the comments form: http://microformats.org/wiki/hcalendar-brainstorming
1. Add configuration page to modify the options
1. We need to prevent events posts from showing up in the index feed.

